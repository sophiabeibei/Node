学习Vue:
    文档地址:
        https://cn.vuejs.org/v2/guide/
    不要买书,直接看文档;
一.数组的方法
    es5,es6
        pop
        push
        shiifit
        unshift
        indexOf
        slice
        lastIndexOf
        reverse
        sort
        join
        map
        forEach
        filter
        for
        of
        splice
        includes
        concat
        some
        every
        reduce
        find

二.框架和库
    框架是库的升级版;
    1.库
        jQuery,zepto,animate.css;库中提供了一些方法,我们调用库里的方法;(我们是主动的,库是被动的)

    2.框架
        框架是按照人家的写法,人家调我们;(我们是被动的,框架是主动的)
        学框架的时候,要学它的用法;按照人家的用法使用;

    3.渐进式框架
        vue核心是做视图的;可以做工程化的项目;核心非常小;压缩后20K;
        非常适合在移动端使用;

    vue很简单?
        hello world简单,其它还是很难的!
        github.io/vuejs

    谈一谈对渐进式框架的理解?
        1."声明式"渲染: 不需要关心过程;用的时候不需要关心如何实现;
        2.组件系统: 将相同内容抽出来(很像函数的方法),多次使用(复用);可以方便维护;
        3.客户端路由: spa框架(single page application)不需要页面跳转,只有一个页面;叫前端路由;
        4.大规模的状态管理: 为了管理数据;(vue提供一个容器...)
        5.构建工具: 1.gulp;2.webpack;默认提供了构建webpack的方法;
        6.ajax获取: 叫vue-resource/axios(很像ajax)
        最基础的要学vue,还要学vue-router,还要学vuex,还要学vue-cil,还要学axios = vue全家桶(总体讲);

    vue由很多部分组成,可以随意选择搭配;(必须得有vue);组成自己想要的框架

为什么学vue?
    1.面试要问;
    2.用js(分为DOM和BOM),操作dom很好性能;vue有个特点叫数据驱动,它不建议直接操作dom,它操作的是数据;
        有了vue之后,以后再也不会有document.getXxx...;vue虚拟dom,在内存中创建一个表示dom结构的对象,当需要渲染时将这个对象映射(转化)成dom;

MVC: 数据模型(单向);      MVC设计框架
    MVC: model view controller
    model: 模型
    view: 视图
    controller: 控制器

MVVM: 双向数据绑定(双向);双向的过程里,数据变化会影响视图,视频变化会影响数据;
    model: 模型
    viewModel: 中间层;时刻监视着页面能变化(输入)的部分;能改视图的,常见的是"表单元素"(双向);
    只有表单才支持双向数据绑定;

下载vue包
    用vue之前,先下载要给包;
    npm: node package manager;
    1.npm init -y
        创建初始化
    npm install
        安装
        vue有两个版本;2.0    1.0;一般都用2.0;


    npm install vue --save--dev
    npm install vue --save
    npm info ...   ...的信息,版本;例如:
        npm info vue
            vue的信息,版本;


表单元素
    1.可以实现双向数据绑定

    2.指令属性
        v中指令就是要给行间属性,而且必须以"v-"开头;一种时官方提供的;另一种就是自定义的;



package.json文件
    {
      "name": "Vue",
      "version": "1.0.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "keywords": [],
      "author": "",
      "license": "ISC",
      "dependencies": {
            //->初始化是为了安装这两个文件;    初始化执行命令    npm init -y
        "bootstrap": "^3.3.7",
        "vue": "^2.4.4"
      }
    }

Ajax获取的库(vue-resource/axios)执行命令
    npm install vue bootstrap vue-resource --save


package-lock.json文件: 记录安装的版本号;
    {
      "name": "Vue",
      "version": "1.0.0",
      "lockfileVersion": 1,
      "dependencies": {
        "vue": {
          "version": "2.4.4",//->本版号
          "resolved": "https://registry.npmjs.org/vue/-/vue-2.4.4.tgz",
          "integrity": "sha512-PCiRmc8ZT1DD5+BN8QUAmnkBefcCLfZVSuhc1u7iu5JoPrSHyyk/+4nehm7k2xVMi8+RFLk5WIHAN14UKF0txw=="
        }
      }
    }



指令directive
    1.v-model: 双向绑定;(input[type="xxx" textarea])

    2.v-once: 绑定一次;

    3.v-html: 展示成html;

    4.v-text: 可以解决单行闪烁问题(解决单行闪烁);
        {{}}: 是v-text的简写;

    5.v-for: 循环;(循环数组,对象,字符串....)
        v-for="value in ary"
        v-for="(item,index) in ary"

    6.v-cloak: 解决闪烁问题;

    7.show(操作的是样式)

    8.v-if(操作的是dom)

    9.v-else-if

    10.v-else


http://v3.bootcss.com

bootstrap
    1.安装bootstrap执行命令:
        npm install bootstrap --save
        最新版本: @3.3.7



设置快捷键
    file => settings => live template => + => 写快捷键的名字 => 快捷键的内容 => define

