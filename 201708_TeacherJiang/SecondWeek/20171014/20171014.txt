课程大纲:
    1.第一周
        git node基础
    2.第二周
        http,fs
    3.第三周
        node框架express,koa
    4.第四周,第五周
        react框架


一.git
    git: 版本控制系统;管理代码版本;
    http://www.zhufengpeixun.cn/docs/html/Git/git入门.html
    1.记住是谁提交的东西;
    2.可以保存每各阶段的内容(备份内容);
    3.可以实现历史穿越;
    4.github开源,多端共享
    5.团队协作;

    linus开发的是linux系统,开发git后可以实现自动合并代码;比较diff(不同);


    使用git
    1.界面化操作gui(source tree 编辑器自带git功能)
    2.命令行操作cli

    mac下
    1.iterm2工具+oh-my-zsh工具
    2.如果安装过xcode,会自动安装git

    查看git版本
    git --version

    linux命令
    0.mkdir 文件名: 创建文件;
    1.pwd: print working directory打印当前
    2.rm -rf .git(删除文件夹)
    3.ls: list show显示所有列表
    4.cd: change directory改变目录
    5.touch: 创建一个空文件    touch index.txt
    6.vi 文件名: 编辑文件      vi index.txt
        1.i: 插入模式             按i键之后,出现"插入"可编辑文件的内容;
        2.esc键+:wq 保存并退出;
    7.cat 文件名: 查看文件内容;


    git和svn的区别:
    git不能直接将工作区的内容推送到历史区;git会将需要的文件放在.git下;
    svn没有过渡区;svn一提就提到历史区;并且svn每个文件下都有一个.svn文件;

    git命令
        git status: 查看信息状态  如果是红色表示未添加到暂存区;
        git add .或者-A或者加文件名: 提交到暂存区;
        git commit -m"描述更新的内容": 添加到历史区(版本库);
        git log: 查看git所有的日志(版本id);

        git diff: 比较某个区的不同;
            工作区 <--> 暂存区: git diff
            暂存区 <--> 历史区: git diff --cached
            历史区 <--> 工作区: git diff master(分支名,一般是master)
        git checkout .: 将所有的文件从暂存区回滚到工作区;
        git reset HEAD index.txt(文件名): 回到上一次暂存区的东西;

        history >1.txt: 把历史命令导出到1.txt文件中;

        git log;从这里选择一段代码;: 可以看到所有的版本号;
        git reset --hard 随便粘贴一段代码(版本号): 回滚历史区;


        git reflog: 查看所有的版本号;

        git branch dev: 创建分支;
        git branck D 分支名: 删除分支(不能在当前分支上)
        git checkout -b 分支名: 创建并切换分支;

        在分支上添加文件
            需要提交后才能归这个分支所有,否则你改的只是工作区内容;


        git merge dev(分支名): 在master上合并dev;

























































